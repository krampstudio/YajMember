apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'

//yes, we use the current stable version of Java ;)
sourceCompatibility = 1.7

configurations {
	//create a configuration that reference the openjpa agent
	javaAgentOpenJpa
}

//depdency management
repositories { mavenCentral() }

dependencies {
	javaAgentOpenJpa "org.apache.openjpa:openjpa-all:$openjpaVersion"
	compile "org.apache.openjpa:openjpa-all:$openjpaVersion"
	compile "com.h2database:h2:$h2Version"
	compile "javax.servlet:servlet-api:$servletVersion"
	compile "com.google.code.gson:gson:$gsonVersion"
	compile "com.google.inject:guice:$guiceVersion"
	compile "com.sun.jersey:jersey-bundle:$jerseyVersion"
	compile "com.sun.jersey.contribs:jersey-guice:$jerseyVersion"
	compile "net.sf.supercsv:super-csv:$superCsvVersion"
	testCompile "junit:junit:$junitVersion"
}

/*
 * Enhance (weaving) classes at build time as required by openjpa
 */
task enhance(dependsOn: 'classes', description: "Enhance domain classes for JPA at build time") << {
	ant.taskdef(name: 'openjpac', classname: 'org.apache.openjpa.ant.PCEnhancerTask'){
		 classpath{
			 pathelement(location: sourceSets.main.output.classesDir)
			 pathelement(location: sourceSets.main.output.resourcesDir)
			 pathelement(location: configurations.javaAgentOpenJpa.asPath)
		 }
	}
	ant.openjpac(){
		 classpath{
			 pathelement(location: sourceSets.main.output.classesDir)
			 pathelement(location: sourceSets.main.output.resourcesDir)
			 pathelement(location: configurations.javaAgentOpenJpa.asPath)
		 }
	}
}

/*
 * task used to import data 
 */
task('bulk', type: JavaExec, dependsOn: 'classes', description : 'Bulk data import on a target (defined by -Ptarget=[event|member|...]]') {

	//available imports
	ext{
		event = relativePath('src/main/scripts/events.csv')
		member = relativePath('src/main/scripts/member.csv')
	}
	
	//check the target is set 
	doFirst {
		if(!project.hasProperty('target')){
		
			println "\nUsage:"
			println "\tgradle bulk -Ptarget=[event|member|...]"
			println "where target is : "
			bulk.ext.each{ println it }
			
			throw new GradleException('Target argument required')
		} else {
			println "\nBulk import of  $target\n"
		}
	}
	
	main = 'org.yajug.users.bulkimport.BulkImport'
	classpath = sourceSets.main.runtimeClasspath
	if(project.hasProperty('target')){
		bulk{
			args target
			args bulk.ext[target]
			debug false
		}
	}
}

//make some tasks to depends on enhance
[bulk, test, war, jettyRun].each{ it.dependsOn enhance }
