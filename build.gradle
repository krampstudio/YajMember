/**
 * Build 
 * 
 * @requires gradle >= 1.2
 * 
 * Tasks:
 * 
 * - compile: 				gradle compileJava
 * - test: 					gradle test
 * - single unit test: 		gradle test -Dtest.single=TestClassName
 * - run the app in dev: 	gradle jettyRun
 * - data import:			gradle bulk
 * 
 * Debug:
 * To remote debug when running the web server using jettyRun, export the following variable:
 * 		export GRADLE_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,address=9999,server=y"
 * To debug a bulk task, set the debug option to true
 */

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'jetty'

//yes, we use the current stable version of Java ;)
sourceCompatibility = 1.7

//depdency management
repositories { mavenCentral() }

dependencies {
	compile "org.mongodb:mongo-java-driver:$mongoDriverVersion"
	compile "org.apache.commons:commons-lang3:$commonsLangVersion"
	compile "javax.servlet:servlet-api:$servletVersion"
	compile "com.google.code.gson:gson:$gsonVersion"
	compile "com.google.inject:guice:$guiceVersion"
	compile "com.google.guava:guava:$guavaVersion"
	compile "com.sun.jersey:jersey-bundle:$jerseyVersion"
	compile "com.sun.jersey.contribs:jersey-guice:$jerseyVersion"
	compile "com.sun.jersey.contribs:jersey-multipart:$jerseyVersion"
	compile "net.sf.supercsv:super-csv:$superCsvVersion"
	compile "org.imgscalr:imgscalr-lib:$scalrVersion"
	testCompile "junit:junit:$junitVersion"
	testCompile "org.jukito:jukito:$jukitoVersion"
}


//jetty conf
httpPort = 8000
stopPort = 8989
stopKey = 'stopMe'

//in development, we use a different jetty webdefault.xml to set the useFileMappedBuffer to false
//to enable file modification when the in place server is running
jettyRun{
	webDefaultXml = file('src/main/config/webdefault.xml')
}

/*
 * Bulk import 
 */
task("bulk", description : "Bulk data import");
['event','member','membership'].each {target ->
	//create a task for each bulk import
	task("bulk${target}", type: JavaExec, dependsOn: 'classes', description : "Bulk data import of ${target}s") {

		doFirst {
			println "\nBulk import of  $target\n"
		}
		
		main = 'org.yajug.users.bulkimport.BulkImport'
		classpath = sourceSets.main.runtimeClasspath
		args target
		args relativePath("src/main/scripts/${target}.csv")
		debug false
			
	}
	//add a dependency to the bulk task
	bulk.dependsOn("bulk${target}")
}
