apply plugin: 'java'
apply plugin: 'gae'

buildscript {
	repositories { mavenCentral() }

	dependencies { classpath "org.gradle.api.plugins:gradle-gae-plugin:$gaePluginVersion" }
}

repositories { mavenCentral() }

dependencies {
	gaeSdk "com.google.appengine:appengine-java-sdk:$gaeVersion"
	
	compile "com.google.appengine:appengine:$gaeVersion"
	compile "com.google.appengine:appengine-api-labs:$gaeVersion"
	compile "com.google.appengine:appengine-api-1.0-sdk:$gaeVersion"
	compile "com.google.appengine:appengine-api-labs:$gaeVersion"
	compile "com.google.appengine:appengine-remote-api:$gaeVersion"
	compile "com.google.appengine.orm:datanucleus-appengine:$dataNucleusVersion"
	compile "javax.persistence:persistence-api:$jpaVersion"
	compile "javax.servlet:servlet-api:$servletVersion"
	compile "com.google.inject:guice:$guiceVersion"
	compile "com.google.code.gson:gson:$gsonVersion"
	compile "com.sun.jersey:jersey-bundle:$jerseyVersion"
	compile "com.sun.jersey.contribs:jersey-guice:$jerseyVersion"
	testCompile "junit:junit:$junitVersion"
}

gae {
	httpPort = port.toInteger()
	downloadSdk = true
//	daemon = true
	
	appcfg {
		host = "$host"
		email = "$email"
		logs { 
			//4 for CRITICAL, 3 for ERROR, 2 for WARNING, 1 for INFO, 0 for DEBUG.
			severity = 0 
			outputFile = file('mylogs.txt')
		}

		app { id = "$appid" }
	}
}

task bulkUpload(type:Exec) {
	workingDir 'src/main/scripts'
  
	commandLine "appcfg.py upload_data --config_file=map.yaml \
				--filename=events.csv --kind=Event \
				--url=http://$host:$port/remote_api"
 }

task testCmd << {
	println "appcfg.py upload_data --config_file=map.yaml \
				--filename=events.csv --kind=Event \
				--url=http://$host:$port/remote_api"
}
